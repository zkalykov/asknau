{"ast":null,"code":"var _jsxFileName = \"/Users/zhyrgalbekkalykov/Documents/ai_research/asknau/asknau/src/Chat.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/Chat.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Chat.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faPlay, faRightFromBracket, faClockRotateLeft, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CopyButton({\n  text\n}) {\n  _s();\n  const [copied, setCopied] = useState(false);\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 1000);\n    } catch {\n      alert('Failed to copy text.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"copy-button\",\n    \"aria-label\": copied ? 'Text copied' : 'Copy text',\n    onClick: handleCopy,\n    children: copied ? 'âœ“' : 'Copy'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(CopyButton, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\");\n_c = CopyButton;\nfunction Chat() {\n  _s2();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [botTyping, setBotTyping] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [chatId, setChatId] = useState(null);\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\n  const [modalContent, setModalContent] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const chatBodyRef = useRef(null);\n  const urlChatId = new URLSearchParams(location.search).get('id');\n  const fetchUserProfile = async token => {\n    try {\n      const response = await fetch('https://asknau-backend-20d79e207a54.herokuapp.com/profile', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 401) {\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    } catch {\n      alert('Error fetching profile.');\n    }\n  };\n  const fetchChatHistory = async token => {\n    try {\n      const response = await fetch('https://asknau-backend-20d79e207a54.herokuapp.com/history', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setChatHistory(data.history || []);\n    } catch {\n      alert('Failed to fetch chat history.');\n    }\n  };\n  const fetchChatMessages = async id => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`https://asknau-backend-20d79e207a54.herokuapp.com/chats/${id}/messages`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setMessages(data.messages.map(msg => ({\n        content: msg.user_message || msg.bot_message,\n        isUser: !!msg.user_message\n      })));\n    } catch {\n      alert('Failed to load messages.');\n    }\n  };\n  const sendMessage = async () => {\n    if (!inputValue.trim() || botTyping) return;\n    const message = inputValue.trim();\n    setMessages(prev => [...prev, {\n      content: message,\n      isUser: true\n    }]);\n    setInputValue('');\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('https://asknau-backend-20d79e207a54.herokuapp.com/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          question: message,\n          chat_id: chatId\n        })\n      });\n      const data = await response.json();\n      setMessages(prev => [...prev, {\n        content: data.answer,\n        isUser: false\n      }]);\n    } catch {\n      alert('Failed to send message.');\n    }\n  };\n  const handleNewChatClick = () => {\n    setMessages([]);\n    setChatId(null);\n    navigate('/chat');\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    fetchUserProfile(token);\n    if (urlChatId) {\n      fetchChatMessages(urlChatId);\n    }\n  }, [urlChatId, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"AskNAU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setProfileMenuOpen(!profileMenuOpen),\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), profileMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNewChatClick,\n            children: \"New Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fetchChatHistory(localStorage.getItem('token')),\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      ref: chatBodyRef,\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.isUser ? 'user-message' : 'bot-message',\n        children: msg.content\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"Type your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s2(Chat, \"NLvO3sXX48hV7DapFB4bU+etx/E=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c2 = Chat;\nexport default Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"CopyButton\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","useLocation","FontAwesomeIcon","faUser","faPlay","faRightFromBracket","faClockRotateLeft","faPlus","jsxDEV","_jsxDEV","CopyButton","text","_s","copied","setCopied","handleCopy","navigator","clipboard","writeText","setTimeout","alert","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chat","_s2","navigate","location","messages","setMessages","inputValue","setInputValue","botTyping","setBotTyping","chatHistory","setChatHistory","chatId","setChatId","profileMenuOpen","setProfileMenuOpen","modalContent","setModalContent","modalOpen","setModalOpen","chatBodyRef","urlChatId","URLSearchParams","search","get","fetchUserProfile","token","response","fetch","method","headers","Authorization","status","localStorage","removeItem","fetchChatHistory","data","json","history","fetchChatMessages","id","getItem","map","msg","content","user_message","bot_message","isUser","sendMessage","trim","message","prev","body","JSON","stringify","question","chat_id","answer","handleNewChatClick","ref","idx","value","onChange","e","target","placeholder","_c2","$RefreshReg$"],"sources":["/Users/zhyrgalbekkalykov/Documents/ai_research/asknau/asknau/src/Chat.js"],"sourcesContent":["// src/Chat.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Chat.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faPlay, faRightFromBracket, faClockRotateLeft, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nfunction CopyButton({ text }) {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 1000);\n    } catch {\n      alert('Failed to copy text.');\n    }\n  };\n\n  return (\n    <button\n      className=\"copy-button\"\n      aria-label={copied ? 'Text copied' : 'Copy text'}\n      onClick={handleCopy}\n    >\n      {copied ? 'âœ“' : 'Copy'}\n    </button>\n  );\n}\n\nfunction Chat() {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [botTyping, setBotTyping] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [chatId, setChatId] = useState(null);\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\n  const [modalContent, setModalContent] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const chatBodyRef = useRef(null);\n\n  const urlChatId = new URLSearchParams(location.search).get('id');\n\n  const fetchUserProfile = async (token) => {\n    try {\n      const response = await fetch('https://asknau-backend-20d79e207a54.herokuapp.com/profile', {\n        method: 'GET',\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      if (response.status === 401) {\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    } catch {\n      alert('Error fetching profile.');\n    }\n  };\n\n  const fetchChatHistory = async (token) => {\n    try {\n      const response = await fetch('https://asknau-backend-20d79e207a54.herokuapp.com/history', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const data = await response.json();\n      setChatHistory(data.history || []);\n    } catch {\n      alert('Failed to fetch chat history.');\n    }\n  };\n\n  const fetchChatMessages = async (id) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`https://asknau-backend-20d79e207a54.herokuapp.com/chats/${id}/messages`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const data = await response.json();\n      setMessages(data.messages.map((msg) => ({\n        content: msg.user_message || msg.bot_message,\n        isUser: !!msg.user_message,\n      })));\n    } catch {\n      alert('Failed to load messages.');\n    }\n  };\n\n  const sendMessage = async () => {\n    if (!inputValue.trim() || botTyping) return;\n    const message = inputValue.trim();\n    setMessages((prev) => [...prev, { content: message, isUser: true }]);\n    setInputValue('');\n\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('https://asknau-backend-20d79e207a54.herokuapp.com/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ question: message, chat_id: chatId }),\n      });\n      const data = await response.json();\n      setMessages((prev) => [...prev, { content: data.answer, isUser: false }]);\n    } catch {\n      alert('Failed to send message.');\n    }\n  };\n\n  const handleNewChatClick = () => {\n    setMessages([]);\n    setChatId(null);\n    navigate('/chat');\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    fetchUserProfile(token);\n\n    if (urlChatId) {\n      fetchChatMessages(urlChatId);\n    }\n  }, [urlChatId, navigate]);\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"chat-header\">\n        <span>AskNAU</span>\n        <div>\n          <button onClick={() => setProfileMenuOpen(!profileMenuOpen)}>Menu</button>\n          {profileMenuOpen && (\n            <div>\n              <button onClick={handleNewChatClick}>New Chat</button>\n              <button onClick={() => fetchChatHistory(localStorage.getItem('token'))}>\n                History\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"chat-body\" ref={chatBodyRef}>\n        {messages.map((msg, idx) => (\n          <div key={idx} className={msg.isUser ? 'user-message' : 'bot-message'}>\n            {msg.content}\n          </div>\n        ))}\n      </div>\n      <div className=\"chat-footer\">\n        <input\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder=\"Type your message\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}